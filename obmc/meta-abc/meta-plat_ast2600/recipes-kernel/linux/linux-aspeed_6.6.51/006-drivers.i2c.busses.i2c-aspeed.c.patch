diff --git a/drivers/i2c/busses/i2c-aspeed.c b/drivers/i2c/busses/i2c-aspeed.c
index 729c0c8bedc1..47b48622124f 100644
--- a/drivers/i2c/busses/i2c-aspeed.c
+++ b/drivers/i2c/busses/i2c-aspeed.c
@@ -688,6 +688,7 @@ static int aspeed_i2c_master_xfer(struct i2c_adapter *adap,
 	spin_lock_irqsave(&bus->lock, flags);
 	bus->cmd_err = 0;
 
+//    printk("Adam base: 0x%p = 0x%x\n", bus->base, readl(bus->base));
 	/* If bus is busy in a single master environment, attempt recovery. */
 	if (!bus->multi_master &&
 	    (readl(bus->base + ASPEED_I2C_CMD_REG) &
@@ -914,10 +915,12 @@ static int aspeed_i2c_init_clk(struct aspeed_i2c_bus *bus)
 
 	divisor = DIV_ROUND_UP(bus->parent_clk_frequency, bus->bus_frequency);
 	clk_reg_val = readl(bus->base + ASPEED_I2C_AC_TIMING_REG1);
+    //printk("Adam clk1 0x%x\n", clk_reg_val);
 	clk_reg_val &= (ASPEED_I2CD_TIME_TBUF_MASK |
 			ASPEED_I2CD_TIME_THDSTA_MASK |
 			ASPEED_I2CD_TIME_TACST_MASK);
 	clk_reg_val |= bus->get_clk_reg_val(bus->dev, divisor);
+    //printk("Adam clk2 0x%x\n", clk_reg_val);
 	writel(clk_reg_val, bus->base + ASPEED_I2C_AC_TIMING_REG1);
 	writel(ASPEED_NO_TIMEOUT_CTRL, bus->base + ASPEED_I2C_AC_TIMING_REG2);
 
